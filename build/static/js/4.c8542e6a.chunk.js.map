{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.module.css","containers/Auth/Auth.module.css","containers/Auth/Auth.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_module_css__WEBPACK_IMPORTED_MODULE_1__","_Input_module_css__WEBPACK_IMPORTED_MODULE_1___default","input","props","inputElement","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","validationError","a","createElement","inputName","elementType","Object","assign","onChange","changed","elementConfig","value","className","join","option","map","op","key","displayValue","Input","Label","label","module","exports","Auth","state","controls","email","type","placeholder","validation","required","isEmail","minLength","valid","password","isSignup","inputChangedHandler","event","controlName","updatedControls","C_github_frameworks_burger_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_this","C_github_frameworks_burger_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","checkValidity","setState","submitHandler","preventDefault","onAuth","switchAuthModeHandler","prevState","this","buildingBurger","authRedirectPath","onSetAuthRedirectPath","_this2","formElement","id","config","form","indName","react__WEBPACK_IMPORTED_MODULE_7___default","_components_UI_Input_Input__WEBPACK_IMPORTED_MODULE_9__","loading","_components_UI_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_11__","errorMessage","error","style","color","authRedirect","isAuthenticated","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","onSubmit","_components_UI_Button_Button__WEBPACK_IMPORTED_MODULE_10__","btnType","clicked","Component","connect","price","burgerBuilder","totalPrice","auth","token","building","dispatch","actions"],"mappings":"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","file":"static/js/4.c8542e6a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) =>{\r\n\r\n    let inputElement = null;\r\n\r\n    let inputClasses = [classes.InputElement];\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        inputClasses.push(classes.Invalid)\r\n    }\r\n\r\n    let validationError = null;\r\n    // to do sa pun style pe error message;\r\n    if (props.invalid && props.touched) {\r\n    validationError = <p>Please enter a valid value for {props.inputName}!</p>;\r\n    }\r\n\r\n    switch(props.elementType){\r\n        case('input'):\r\n        inputElement = <input onChange={props.changed} {...props.elementConfig} value={props.value} className={inputClasses.join(' ')} />\r\n        break;\r\n        case('textarea'):\r\n        inputElement = <textarea onChange={props.changed} {...props.elementConfig} value={props.value} className={inputClasses.join(' ')} />\r\n        break;\r\n        case('select'):\r\n        inputElement = \r\n            \r\n            <select onChange={props.changed} {...props.elementConfig} value={props.value} className={inputClasses.join(' ')}>\r\n            {props.elementConfig.option.map(op =>(\r\n                <option key={op.value} value={op.value}>\r\n                {op.displayValue}\r\n                </option>\r\n            ))}\r\n            </select>\r\n        \r\n        break;\r\n        default:\r\n        inputElement = <input onChange={props.changed} {...props.elementConfig} value={props.value} className={inputClasses.join(' ')} />\r\n    }\r\n\r\n    return(\r\n\r\n        <div className={classes.Input}>\r\n        <label className={classes.Label}>{props.label}</label>\r\n        {inputElement}\r\n        {validationError}\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default input;\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__15W6Z\",\"Label\":\"Input_Label__3r7lC\",\"InputElement\":\"Input_InputElement__1VmBV\",\"Invalid\":\"Input_Invalid__1ycfH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__2f_yZ\"};","import React,{Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nimport classes from './Auth.module.css';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport {connect} from 'react-redux';\r\nimport {checkValidity} from '../../shared/utility';\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n\r\n        controls: {\r\n            email:{\r\n                elementType: 'input',\r\n                elementConfig:{\r\n                    type:'email',\r\n                    placeholder:'Your Email'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    isEmail: true,\r\n                    minLength:6\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            password:{\r\n                elementType: 'input',\r\n                elementConfig:{\r\n                    type:'password',\r\n                    placeholder:'Password'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    minLength:6\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            }\r\n        },\r\n\r\n        isSignup:false,\r\n\r\n    }\r\n\r\n    inputChangedHandler = (event, controlName) =>{\r\n\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName] : {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid : checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            controls:updatedControls\r\n        })\r\n\r\n    }\r\n\r\n\r\n    submitHandler = (event) =>{\r\n\r\n        event.preventDefault();\r\n\r\n        this.props.onAuth(this.state.controls.email.value,this.state.controls.password.value,this.state.isSignup)\r\n\r\n    }\r\n\r\n    switchAuthModeHandler = () =>{\r\n\r\n        this.setState(prevState =>{\r\n            return{\r\n                isSignup: !prevState.isSignup\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(!this.props.buildingBurger && this.props.authRedirectPath !== '/'){\r\n            this.props.onSetAuthRedirectPath()\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render(){\r\n\r\n        const formElement = [];\r\n        for(let key in this.state.controls){\r\n            formElement.push({\r\n                id: key,\r\n                config: this.state.controls[key],\r\n            })\r\n        }\r\n\r\n        let form = formElement.map(indName =>{\r\n            return(\r\n                <Input \r\n                key={indName.id}\r\n                inputName={indName.id}\r\n                elementType={indName.config.elementType}\r\n                elementConfig={indName.config.elementConfig}\r\n                value={indName.config.value}\r\n                invalid={!indName.config.valid}\r\n                shouldValidate={indName.config.validation}\r\n                touched={indName.config.touched}\r\n                changed={(event) =>{this.inputChangedHandler(event, indName.id)}}\r\n                />\r\n            )\r\n        })\r\n\r\n        if(this.props.loading){\r\n            form = <Spinner />\r\n        }\r\n\r\n        let errorMessage = null;\r\n\r\n        if(this.props.error){\r\n            errorMessage = (\r\n                <p style={{color:'red'}}>{this.props.error}</p>\r\n            )\r\n        }\r\n\r\n        let authRedirect = null;\r\n        if(this.props.isAuthenticated){\r\n            authRedirect = <Redirect to={this.props.authRedirectPath}/>\r\n        }\r\n\r\n        return(\r\n            <div className={classes.Auth}>\r\n                {authRedirect}\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                {form}\r\n                <Button btnType=\"Success\">Submit</Button>\r\n                Currently {!this.state.isSignup? 'Signing in' : 'Registering new email'}\r\n                </form>\r\n                <Button \r\n                clicked={this.switchAuthModeHandler}\r\n                btnType=\"Danger\">Go to {this.state.isSignup ? 'Sign in' : 'Sign up'}</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n\r\n    return{\r\n        onAuth:(email,password, isSignup) => dispatch(actions.auth(email,password,isSignup)),\r\n        onSetAuthRedirectPath: ()=> dispatch(actions.setAuthRedirectPath('/'))\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        price : state.burgerBuilder.totalPrice,\r\n        loading : state.auth.loading,\r\n        error : state.auth.error,\r\n        isAuthenticated: state.auth.token != null,\r\n        buildingBurger: state.burgerBuilder.building,\r\n        authRedirectPath: state.auth.authRedirectPath\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Auth)"],"sourceRoot":""}