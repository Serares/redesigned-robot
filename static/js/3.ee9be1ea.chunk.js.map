{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.js","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/Checkout.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_module_css__WEBPACK_IMPORTED_MODULE_1__","_Input_module_css__WEBPACK_IMPORTED_MODULE_1___default","input","props","inputElement","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","validationError","a","createElement","inputName","elementType","Object","assign","onChange","changed","elementConfig","value","className","join","option","map","op","key","displayValue","Input","Label","label","module","exports","ContactData","CheckoutSummary","state","orderForm","name","type","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","e","preventDefault","formData","formElementIdent","_this","priceFixed","parseFloat","price","toFixed","orderObj","ingredients","ingr","orderData","userId","burgerStart","token","changedInput","formElement","updatedForm","objectSpread","updatedElementForm","target","checkValidity","inputIdent","console","log","setState","_this2","this","id","config","form","react_default","onSubmit","indName","event","Button","disabled","btnType","clicked","loading","Spinner","React","Component","connect","burgerBuilder","totalPrice","orders","auth","dispatch","actions","withErrorHandler","axios","checkoutSummary","style","width","margin","Burger","cancelOrder","continueOrder","Checkout","history","goBack","replace","pathname","summary","Redirect","to","ing","purchasedRedirect","purchased","Route","path","match","url","component"],"mappings":"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","file":"static/js/3.ee9be1ea.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) =>{\r\n\r\n    let inputElement = null;\r\n\r\n    let inputClasses = [classes.InputElement];\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        inputClasses.push(classes.Invalid)\r\n    }\r\n\r\n    let validationError = null;\r\n    // to do sa pun style pe error message;\r\n    if (props.invalid && props.touched) {\r\n    validationError = <p>Please enter a valid value for {props.inputName}!</p>;\r\n    }\r\n\r\n    switch(props.elementType){\r\n        case('input'):\r\n        inputElement = <input onChange={props.changed} {...props.elementConfig} value={props.value} className={inputClasses.join(' ')} />\r\n        break;\r\n        case('textarea'):\r\n        inputElement = <textarea onChange={props.changed} {...props.elementConfig} value={props.value} className={inputClasses.join(' ')} />\r\n        break;\r\n        case('select'):\r\n        inputElement = \r\n            \r\n            <select onChange={props.changed} {...props.elementConfig} value={props.value} className={inputClasses.join(' ')}>\r\n            {props.elementConfig.option.map(op =>(\r\n                <option key={op.value} value={op.value}>\r\n                {op.displayValue}\r\n                </option>\r\n            ))}\r\n            </select>\r\n        \r\n        break;\r\n        default:\r\n        inputElement = <input onChange={props.changed} {...props.elementConfig} value={props.value} className={inputClasses.join(' ')} />\r\n    }\r\n\r\n    return(\r\n\r\n        <div className={classes.Input}>\r\n        <label className={classes.Label}>{props.label}</label>\r\n        {inputElement}\r\n        {validationError}\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default input;\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__15W6Z\",\"Label\":\"Input_Label__3r7lC\",\"InputElement\":\"Input_InputElement__1VmBV\",\"Invalid\":\"Input_Invalid__1ycfH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__2SdHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__1xlo-\"};","import React from 'react';\r\nimport axios from '../../../axios-orders';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nimport classes from './ContactData.module.css';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport {checkValidity} from '../../../shared/utility';\r\n\r\n\r\nclass ContactData extends React.Component{\r\n\r\n    state = {\r\n\r\n        orderForm:{\r\n\r\n            name:{\r\n                elementType: 'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'Your Name'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n\r\n            street:{\r\n                elementType: 'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'Your Address'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n\r\n            zipCode:{\r\n                elementType: 'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'ZIP Code'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    minLength: 5,\r\n                    maxLength: 6\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n\r\n\r\n            country:{\r\n                elementType: 'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'Your Country'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n\r\n            email:{\r\n                elementType: 'input',\r\n                elementConfig:{\r\n                    type:'email',\r\n                    placeholder:'Your E-Mail'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n\r\n            deliveryMethod:{\r\n                elementType: 'select',\r\n                elementConfig:{\r\n                    option:[\r\n                        {value:'fastes', displayValue:'Fastes'},\r\n                        {value:'cheapest', displayValue:'Cheapest'},\r\n                    ]\r\n                },\r\n                validation:{\r\n                    required:true,\r\n                },\r\n                value:'',\r\n                touched:false,\r\n                valid: false\r\n            }\r\n\r\n        },\r\n\r\n        formIsValid:false\r\n    }\r\n\r\n    orderHandler = (e) =>{\r\n\r\n        e.preventDefault();\r\n\r\n        const formData = {};\r\n        for(let formElementIdent in this.state.orderForm){\r\n            formData[formElementIdent] = this.state.orderForm[formElementIdent].value\r\n        }\r\n\r\n        // loading at the start of the request;\r\n        // this.setState({loading:true});\r\n        let priceFixed = parseFloat((this.props.price).toFixed(2))\r\n        const orderObj = {\r\n            ingredients : this.props.ingr,\r\n            orderData : formData,\r\n            price: priceFixed,\r\n            userId: this.props.userId\r\n        };\r\n\r\n        this.props.burgerStart(orderObj, this.props.token);\r\n\r\n    }\r\n\r\n    changedInput = (e, formElement) =>{\r\n\r\n        // copiezi state \r\n        const updatedForm = {...this.state.orderForm};\r\n\r\n        const updatedElementForm = {\r\n            ...this.state.orderForm[formElement]\r\n        }\r\n\r\n        updatedElementForm.value = e.target.value;\r\n        updatedElementForm.valid = checkValidity(updatedElementForm.value, updatedElementForm.validation);\r\n        updatedElementForm.touched = true;\r\n        updatedForm[formElement] = updatedElementForm;\r\n\r\n        let formIsValid = true;\r\n\r\n        for(let inputIdent in updatedForm){\r\n            formIsValid = updatedForm[inputIdent].valid && formIsValid;\r\n        }\r\n\r\n        console.log(formIsValid);\r\n\r\n        this.setState({\r\n            orderForm: updatedForm,\r\n            formIsValid : formIsValid\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const formElement = [];\r\n        for(let key in this.state.orderForm){\r\n            formElement.push({\r\n                id: key,\r\n                config: this.state.orderForm[key],\r\n            })\r\n        }\r\n\r\n\r\n        let form = (\r\n        <form onSubmit={this.orderHandler}>\r\n        \r\n        {formElement.map(indName =>\r\n            (\r\n            <Input \r\n                key={indName.id}\r\n                inputName={indName.id}\r\n                elementType={indName.config.elementType}\r\n                elementConfig={indName.config.elementConfig}\r\n                value={indName.config.value}\r\n                invalid={!indName.config.valid}\r\n                shouldValidate={indName.config.validation}\r\n                touched={indName.config.touched}\r\n                changed={(event) =>{this.changedInput(event, indName.id)}}\r\n            />\r\n            )\r\n        )}\r\n\r\n        <Button disabled={!this.state.formIsValid} btnType=\"Success\" clicked={this.orderHandler}> Order </Button>\r\n\r\n                </form>);\r\n\r\n            if(this.props.loading){\r\n                form = <Spinner />\r\n            }\r\n\r\n\r\n        return(\r\n\r\n            <div className={classes.ContactData} >\r\n                {form}\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        price : state.burgerBuilder.totalPrice,\r\n        ingr : state.burgerBuilder.ingredients,\r\n        loading: state.orders.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        burgerStart : (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactData,axios));","import React from 'react';\r\n\r\n\r\nimport Button from '../../UI/Button/Button';\r\nimport Burger from '../../Burger/Burger';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\n// const ingredients = {\r\n//     salad: 0,\r\n//     bacon: \"1\",\r\n// }\r\n\r\nclass checkoutSummary extends React.Component{\r\n    // console.log(props.ingredients)\r\n    componentWillMount(){\r\n        console.log(this.props)\r\n    }\r\n    render(){\r\n        \r\n        return (\r\n\r\n        <div className={classes.CheckoutSummary} >\r\n            <h1>Yumm burger</h1>\r\n\r\n            <div style={{width:'100%',margin:'auto'}}>\r\n                <Burger ingredients={this.props.ingredients} />\r\n            </div>\r\n            <Button btnType='Danger' clicked={this.props.cancelOrder}>Cancel</Button>\r\n            <Button btnType='Success' clicked={this.props.continueOrder}>Continue</Button>\r\n        </div>\r\n\r\n    )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default checkoutSummary;","import React, {Component} from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nimport ContactData from './ContactData/ContactData';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\n// afiseaza burgerul comandat\r\n\r\nclass Checkout extends Component {\r\n\r\n        // nu este nevoie nici de state cand ai redux\r\n\r\n    // constructor(props){\r\n    //     super(props);\r\n\r\n    //     this.state = {\r\n    //         ingredients:null,\r\n    //         price: 0\r\n    //     }\r\n    // }\r\n\r\n        // nu mai este nevoie de query aparams cand ai redux \r\n        \r\n    // componentWillMount(){\r\n    //     // ca sa parcurgi query parameters din url poti sa folosesti si keys in loc de entries dar iti returneaza doar cheia fara valoare\r\n    //     // folosesc +i[1] ca sa convertesti de la string la int \r\n    //     const queryParams = new URLSearchParams(this.props.location.search).entries();\r\n    //     let newIngredients = {};\r\n    //     let price = 0;\r\n    //     // i va arata ['salad','1']\r\n    //     for(let i of queryParams){\r\n    //         if(i[0] === 'price'){\r\n    //             price = i[1]\r\n    //         } else {\r\n    //             newIngredients[i[0]]= +i[1]\r\n    //         }\r\n            \r\n    //     }\r\n    //     console.log(newIngredients)\r\n    //     this.setState({\r\n    //         ingredients: newIngredients,\r\n    //         price: price\r\n    //     })\r\n        \r\n    // }\r\n\r\n    componentWillMount() {\r\n        console.log(this.props)\r\n    }\r\n\r\n    cancelOrder = () =>{\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    continueOrder = () =>{\r\n        this.props.history.replace({pathname:'/checkout/contact-data'})\r\n    }\r\n    \r\n    render(){\r\n\r\n        let summary = <Redirect to=\"/\" />\r\n\r\n        if(this.props.ing){\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\r\n            summary = \r\n\r\n            <div>\r\n            {purchasedRedirect}\r\n            <CheckoutSummary \r\n            cancelOrder={this.cancelOrder}\r\n            continueOrder={this.continueOrder}\r\n            ingredients={this.props.ing} />\r\n            {/* nested route aici apare in componenta asta componenta ContactData */}\r\n            <Route path={this.props.match.url + '/contact-data'} component={ContactData} />\r\n            {/* asa trimiti props catre routed component */}\r\n            {/* <Route path={this.props.match.url + '/contact-data'}\r\n             render={(props)=>(<ContactData ingredients={this.state.ingredients} price={this.state.price} {...props} />)} /> */}\r\n            </div>\r\n\r\n        }\r\n        \r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state=> {\r\n    return {\r\n        ing: state.burgerBuilder.ingredients,\r\n        purchased : state.orders.purchased\r\n    }\r\n}\r\n\r\n// const mapDispatchtoProps = (dispatch) =>{\r\n//     return {\r\n\r\n//     }\r\n// }\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Checkout);"],"sourceRoot":""}